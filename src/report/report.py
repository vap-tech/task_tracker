import smtplib
from email.message import EmailMessage

from celery import Celery

from src.config import SMTP_HOST, SMTP_PORT, SMTP_PASSWORD, SMTP_USER, REDIS_HOST, REDIS_PORT

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º Celery
celery = Celery('tasks', broker=f'redis://{REDIS_HOST}:{REDIS_PORT}')


def get_email_template_dashboard(username: str) -> EmailMessage:
    """
    –°–æ–±–∏—Ä–∞–µ—Ç email
    :param username: –ê–¥—Ä–µ—Å –¥–ª—è email
    :return: –û–±—ä–µ–∫—Ç –∫–ª–∞—Å—Å–∞ EmailMessage
    """
    email = EmailMessage()
    email['Subject'] = '–û—Ç—á–µ—Ç –æ –∑–∞–¥–∞—á–∞—Ö'
    email['From'] = SMTP_USER
    email['To'] = SMTP_USER

    email.set_content(
        '<div>'
        f'<h1 style="color: red;">–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, {username}, –∞ –≤–æ—Ç –∏ –≤–∞—à –æ—Ç—á–µ—Ç. Enjoy üòä</h1>'
        '<img src="https://v-petrenko.ru/dashboard.jpg" width="600">'
        '</div>',
        subtype='html'
    )
    return email


@celery.task
def send_email_report_dashboard(username: str):
    """
    –ó–∞–¥–∞—á–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ email
    :param username: –ê–¥—Ä–µ—Å –¥–ª—è email
    :return:
    """
    email = get_email_template_dashboard(username)
    with smtplib.SMTP_SSL(SMTP_HOST, SMTP_PORT) as server:
        server.login(SMTP_USER, SMTP_PASSWORD)
        server.send_message(email)
